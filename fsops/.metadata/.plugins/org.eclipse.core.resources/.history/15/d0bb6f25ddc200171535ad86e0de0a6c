package fsops;
import java.io.*;
import java.text.*;
import java.util.*;
import java.nio.file.*;
import java.nio.file.attribute.*;

/**
 * Hello world!
 *
 */
public class FileManager 
{
	public static void createDirectory(String args[]) {
        int n = args.length;
		for(int i = 1; i < n; i++) {
    		File file = new File(args[i]);
    		if(!file.exists()) {
    			file.mkdir();
    			System.out.println("Successfully Made " + args[i]);
    		}
    		else {
    			System.out.println("The directory is already there.");
    		}
    	}
	}
	public static void createNewFile(String args[]) {
        int n = args.length;
		for(int i = 1; i < n; i++) {
    		File file = new File(args[i]);
    		try {
    			file.createNewFile();
    			System.out.println("Successfully Created " + args[i]);
    		}
    		catch(Exception e){
    	         e.printStackTrace();
    	      }
    	}
    }
	public static void remove(String args[]) {
        int n = args.length;
    	for(int i = 1; i < n; i++) {
    		File file = new File(args[i]);
    		if(file.exists()) {
    			file.delete();
    			System.out.println("Susssfully removed " + args[i]);
    		}
    		else {
    			System.out.println("Cannot find the directory, please input the right directory.");
    		}
    	}
	}
	
	public static void list(String arg) {
    	File file = new File(arg);
    	if(file.exists()) {
    		File lists[] = file.listFiles();
    		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    		String lastMdf=df.format(new Date(file.lastModified()));
        	int len = lists.length;
        	for(int i = 0; i < 60; i++)
        		System.out.format("*");
        	System.out.println();
        	System.out.format("Name                "
        			 		+ "Create Date         "
        					+ "Last Modified       \n");
    		for(int i = 0; i < len; i++) {
    			System.out.format("%20s%20s%20s\n", lists[i].getName(), getCreateTime(lists[i].getPath()), lastMdf);
    		}
    	}
    	else 
    		System.out.println("Cannot find the directory that you are intended to list.");
    }
	public static String getCreateTime(String filePath){  
		Path p = Paths.get(filePath);
	    try{
	    	BasicFileAttributes view = Files.getFileAttributeView(p, BasicFileAttributeView.class).readAttributes();
		    long creationTime = view.creationTime().toMillis();   
		    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    		String crtTime=df.format(new Date(creationTime));
    		return crtTime;
	    }
	    catch(IOExeption e) {}
	}
	public static void printHelp() {
    	System.out.format("Manipulations exist in this JAR: \n"
    			+ " 1. Making a new directory: \"mkdir\" + #namesOfDirectories\n"
    			+ " 2. Creating a new file: \"nfile\" + #namesOfDirectories\n"
    			+ " 3. Removing a file or a directory: \"rm\" + #namesOfDirectories\n"
    			+ " 4. Listing information of files inside a directory\n");
    	}
	public static void printSelf() {
		System.out.format("Application Name: FileManager\n"
				+ "Author & Copyright: Joseph Ding\n"
				+ "Current Version: v1.0\n"
				+ "Date of Birth: 17.10");
	}
    public static void main(String args[])
    {

    	String cmd = args[0];
        if(cmd.equals("mkdir"))
        	createDirectory(args);
        if(cmd.equals("nfile")) 
        	createNewFile(args);
        if(cmd.equals("rm")) 
        	remove(args);
        if(cmd.equals("ls")) 
        	list(args[1]);
        if(cmd.equals("help")) 
        	printHelp();
        if(cmd.equals("self"))
        	printSelf();
      }
}